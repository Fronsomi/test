// Generated by view binder compiler. Do not edit!
package com.example.klyuchnik.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.klyuchnik.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUpdatePersonBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button idBtnDelete;

  @NonNull
  public final Button idBtnUpdate;

  @NonNull
  public final EditText idEdtAudienceNumber;

  @NonNull
  public final EditText idEdtCardNumber;

  @NonNull
  public final EditText idEdtFullName;

  @NonNull
  public final EditText idEdtTime;

  private ActivityUpdatePersonBinding(@NonNull LinearLayout rootView, @NonNull Button idBtnDelete,
      @NonNull Button idBtnUpdate, @NonNull EditText idEdtAudienceNumber,
      @NonNull EditText idEdtCardNumber, @NonNull EditText idEdtFullName,
      @NonNull EditText idEdtTime) {
    this.rootView = rootView;
    this.idBtnDelete = idBtnDelete;
    this.idBtnUpdate = idBtnUpdate;
    this.idEdtAudienceNumber = idEdtAudienceNumber;
    this.idEdtCardNumber = idEdtCardNumber;
    this.idEdtFullName = idEdtFullName;
    this.idEdtTime = idEdtTime;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUpdatePersonBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUpdatePersonBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_update_person, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUpdatePersonBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.idBtnDelete;
      Button idBtnDelete = ViewBindings.findChildViewById(rootView, id);
      if (idBtnDelete == null) {
        break missingId;
      }

      id = R.id.idBtnUpdate;
      Button idBtnUpdate = ViewBindings.findChildViewById(rootView, id);
      if (idBtnUpdate == null) {
        break missingId;
      }

      id = R.id.idEdtAudienceNumber;
      EditText idEdtAudienceNumber = ViewBindings.findChildViewById(rootView, id);
      if (idEdtAudienceNumber == null) {
        break missingId;
      }

      id = R.id.idEdtCardNumber;
      EditText idEdtCardNumber = ViewBindings.findChildViewById(rootView, id);
      if (idEdtCardNumber == null) {
        break missingId;
      }

      id = R.id.idEdtFullName;
      EditText idEdtFullName = ViewBindings.findChildViewById(rootView, id);
      if (idEdtFullName == null) {
        break missingId;
      }

      id = R.id.idEdtTime;
      EditText idEdtTime = ViewBindings.findChildViewById(rootView, id);
      if (idEdtTime == null) {
        break missingId;
      }

      return new ActivityUpdatePersonBinding((LinearLayout) rootView, idBtnDelete, idBtnUpdate,
          idEdtAudienceNumber, idEdtCardNumber, idEdtFullName, idEdtTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
